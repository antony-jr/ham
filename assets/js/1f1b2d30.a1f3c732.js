"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1],{2741:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"enchilada-los19-guide-relocking","metadata":{"permalink":"/ham/blog/enchilada-los19-guide-relocking","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-12-21-enchilada-guide/index.md","source":"@site/blog/2022-12-21-enchilada-guide/index.md","title":"Relocking your Bootloader with LineageOS 19.1 with MindTheGapps on OnePlus 6","description":"This guide needs the ham tool to build, this guide cannot be used without","date":"2022-12-21T00:00:00.000Z","formattedDate":"December 21, 2022","tags":[{"label":"enchilada","permalink":"/ham/blog/tags/enchilada"},{"label":"guide","permalink":"/ham/blog/tags/guide"},{"label":"lineageos19.1","permalink":"/ham/blog/tags/lineageos-19-1"},{"label":"oneplus6","permalink":"/ham/blog/tags/oneplus-6"}],"readingTime":8.835,"hasTruncateMarker":false,"authors":[{"name":"Divya Antony J.R","title":"Maintainer of HAM","url":"https://antonyjr.in","imageURL":"https://github.com/antony-jr.png","key":"antonyjr"}],"frontMatter":{"slug":"enchilada-los19-guide-relocking","title":"Relocking your Bootloader with LineageOS 19.1 with MindTheGapps on OnePlus 6","authors":["antonyjr"],"tags":["enchilada","guide","lineageos19.1","oneplus6"]},"nextItem":{"title":"Welcome to HAM Blogs","permalink":"/ham/blog/welcome"}},"content":":::info\\n\\nThis guide needs the [ham tool](https://antony-jr.github.io/ham/) to build, this guide cannot be used without\\nthat tool. HAM(Hetzner Android Make) helps you build your own flavor of Android under one Euro using Hetzner Cloud.\\n\\n:::\\n\\nThe OnePlus 6 (codenamed _\\"enchilada\\"_) is a flagship smartphone from OnePlus.\\nIt was released in May 2018.\\n\\n| Basic                   | Spec Sheet                                                                                                                     |\\n| -----------------------:|:------------------------------------------------------------------------------------------------------------------------------ |\\n| CPU                     | Octa-core (4x2.8 GHz Kryo 385 Gold & 4x1.7 GHz Kryo 385 Silver)                                                                |\\n| Chipset                 | Qualcomm SDM845 Snapdragon 845                                                                                                 |\\n| GPU                     | Adreno 630                                                                                                                     |\\n| Memory                  | 6/8 GB RAM                                                                                                                     |\\n| Shipped Android Version | 8.1                                                                                                                            |\\n| Storage                 | 64/128/256 GB                                                                                                                  |\\n| Battery                 | Non-removable Li-Po 3300 mAh battery                                                                                           |\\n| Display                 | Optic AMOLED, 1080 x 2280 pixels, 19:9 ratio (~402 ppi density)                                                                |\\n| Camera (Back)           | Dual: 16 MP (f/1.7, 27mm, 1/2.6\\", 1.22\xb5m, gyro-EIS, OIS) + 20 MP (16 MP effective, f/1.7, 1/2.8\\", 1.0\xb5m), PDAF, dual-LED flash |\\n| Camera (Front)          | 16 MP (f/2.0, 25mm, 1/3\\", 1.0\xb5m), gyro-EIS, Auto HDR, 1080p                                                                    |\\n\\n![OnePlus 6](https://cdn2.gsmarena.com/vv/pics/oneplus/oneplus-6-5.jpg \\"OnePlus 6\\")\\n\\n:::info\\n\\n**This blog post and the entire HAM project was inspired from [this XDA forum post](https://forum.xda-developers.com/t/guide-re-locking-the-bootloader-on-the-oneplus-6t-with-a-self-signed-build-of-los.4113743/), so credits goes to the\\nOP, LineageOS developers and AOSP.**\\n\\n:::\\n\\n\\n## Scope of this Guide\\n\\nCreating an *unofficial build of LineageOS 19.1* suitable for using to re-lock the bootloader on a OnePlus 6 and\\ntake you through the process of re-locking your bootloader after installing the above.\\n\\n## Out of Scope\\n\\nRemove *all* warning messages during boot (the yellow \\"Custom OS\\" message will be present though the orange \\n\\"Unlocked bootloader\\" message will not), allow you to use official builds of LineageOS 19.1 on your device with a \\nre-locked bootloader.\\n\\n:::danger \\n\\nYou **should not** flash the official LineageOS build after you have re-locked your phone, you can only build\\nunofficial LineageOS builds which are self signed by you, using HAM will make this process very easy. Do not lose\\nyour AndroidCerts.zip file which contains your Android Certificates.\\n\\n:::\\n\\n## Pre-requisites\\n\\n* Basic knowledge of Terminal commands and features in your OS (Windows, Linux or MacOS)\\n* A OnePlus 6 Device\\n* A PC/Phone which supports you to run **[ham tool](https://antony-jr.github.io/ham/)**\\n* Finished **[setting up ham](https://antony-jr.github.io/ham/docs/get_started)** with \\"Getting Started\\" guide.\\n* A working USB cable\\n* Fastboot/Adb installed and functional\\n* **AndroidCerts.zip**, **Github API Key**, **Github Username** and **Github Repo** from \\"Getting Started\\" [guide](https://antony-jr.github.io/ham/docs/get_started)\\n \\n:::danger\\n\\nThis process may brick your device. Do not proceed unless you are comfortable taking this risk. \\n\\nThis process will delete all data on your phone! Do not proceed unless you have backed up your data!\\n\\nMake sure you have read through this entire process at least once before attempting, if you are uncomfortable \\nwith any steps include in this guide, do not continue.\\n\\n:::\\n\\n**If you did not read the \\"Getting Started\\", please go and \\n[read that first](https://antony-jr.github.io/ham/docs/get_started), \\nthen come back here.**\\n\\n\\n## Preparing ```answers.json```\\n\\nWe can pass a json file to HAM instead of answering everything during the prompt, you can **also** write these answers\\nduring the prompt itself, that\'s your choice.\\n\\nThis file contains **important variables** that are needed from the user (i.e you), like a Github Repo to Upload the\\noutput of the build, a Github API Key to authenticate to upload assets to the given Github repo. A Github Username and\\nPath to the AndroidCerts.zip file.\\n\\nFrom \\"Getting Started\\" guide, you should have all these variables, if you already have **Android Certificates** then\\nzip all the certificates together, that\'s your AndroidCerts.zip file.\\n\\n:::danger\\n\\nKeep the ```answers.json``` file safe since that contains a lot of sensitive information, ```~/.ham.json```\\nis the ham tool configuration file, this also contains a lot of sensitive information. Make sure that these\\nfiles are never shared with anyone.\\n\\n::: \\n\\n:::tip\\n\\nYou may delete your ```answers.json``` after you finish the build successfully, this file is to make life easier\\nfor you.\\n\\n:::\\n\\nHere is a sample ```answers.json``` file required for this build,\\n\\n```json\\n{\\n   \\"github_token\\": \\"github_pat_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXx1\\",\\n   \\"github_user\\": \\"yourusername\\",\\n   \\"github_repo\\": \\"yourrepo\\",\\n   \\"android_certs\\": \\"/absolute/path/to/AndroidCerts.zip\\",\\n   \\"updater_url\\": \\"\\"\\n}\\n```\\n\\n:::tip\\n\\nYou can give the ```updater_url``` a empty string, unless you know what you are doing. During the build, the updater\\nstring will be updated to this url.\\n\\n:::\\n\\n:::note\\n\\n```android_certs``` must be a file path to the AndroidCerts.zip file. In Windows this might be something like,\\n```C:\\\\Users\\\\Desktop\\\\AndroidCerts.zip``` and so forth. If you are using Android to build, enable termux storage and\\ncopy the certificates to your home.\\n:::\\n\\n\\n## Get LineageOS 19.1 with MindTheGapps (Self-Signed)\\n\\nYou should now have everything ready to start a remote build, start the build by entering the following command\\nin your operating system\'s Terminal. (In Windows, this is Command Prompt or Terminal App, In Android this is Termux and so forth).\\n\\n```bash\\n ham get -a answers.json ~@gh/enchilada-los19.1:gapps\\n```\\n\\nOnce you see the progress bar, and some progress like, **Installing Dependencies**, you may close this program using\\n**Ctrl + C** or **Esc** or **q**. You may now shutdown your device if you like to.. You can continue tracking the \\nbuild or check the status of the build by running the same command on any device with the same ```~/.ham.json``` config\\nfile which was used to start the build first.\\n\\nTrack using the following command,\\n\\n```bash\\n ham get ~@gh/enchilada-los19.1:gapps\\n```\\n\\nIf the build was successful, you will have the output in the given Github Repo releases, something like this,\\n\\n![Demo Releases](releases.png)\\n\\nAfter you see the build output, just to be safe run **```ham clean```** to destroy all build servers if exists, this\\nwill be done by ham automatically on the server itself, but just to be safe. If build has failed, when you run \\nthe above get command, you will get a error saying there was a previous build which was **successful** or **failed**.\\n\\n```bash\\n ham clean # After you confirm the previous build was successful or failed.\\n # or just run this if you want to stop every build asap to save cost.\\n```\\n\\n## Download the LineageOS Build from Github Releases\\n\\nAfter you see the new release on your repository, Download all files to a directory and and open a Terminal in that\\ndirectory.\\n\\nRun the following commands, (**Make sure you have fastboot/adb installed in your system which you are going to use to\\nflash your newly built ROM**) \\n\\n```bash\\n unzip lineage-19.1-*-recovery-enchilada.zip\\n # If you are in Windows, use a Archive Extractor to extract \\n # the contents of the recovery zip \\n```\\n\\nYou will now have a **pkmd.bin** file which is your public key that is going to be flashed into your Phone as the \\ncustom avb key, and a **```lineage-19.1-*-recovery-enchilada.img```** file when the archive is extracted.\\n\\n**You must now unlock your phone, make backups and also if you want, use fastboot to backup your persist and \\nother partition too.** See LineageOS docs for this [instruction](https://wiki.lineageos.org/devices/enchilada/install#unlocking-the-bootloader).\\n \\nThis is the usual you would do with flashing any ROM, except you should not patch or use any third party recovery,\\nwe will only be using LineageOS recovery.\\n\\n:::danger\\n\\nYou should not use TWRP or any Recovery other than LineageOS Recovery which you have downloaded from Github Releases,\\nsimilarly **YOU SHOULD ONLY SIDELOAD THE ROM AND NOTHING ELSE**. **DO NOT SIDELOAD GAPPS OR MAGISK, THIS WILL \\nBRICK YOUR PHONE**.\\n\\n:::\\n\\n**Enable Developer Mode in your Phone by tapping the Build Number 7 Times, then enable ADB.** Now Connect your Phone\\nto your PC and do the following,\\n\\n**Enable OEM unlock in the Developer options under device Settings**.\\n\\nConnect the device to your PC via USB. On the computer, open a command prompt (on Windows) or \\nterminal (on Linux or macOS) window, and type:\\n\\n```bash\\n adb reboot bootloader\\n```\\nOnce the device is in fastboot mode, verify your PC finds it by typing:\\n\\n```bash\\n fastboot devices\\n```\\n\\nTo verify if fastboot connection is ok.\\n\\n**Now let\'s flash the recovery we just extracted from the zip file,**\\n\\n```\\n fastboot flash boot lineage-19.1-*-recovery-enchilada.img \\n```\\n\\nNow reboot into recovery or enter the following command,\\n```\\n fastboot reboot recovery\\n```\\n\\n**You can also use the Volume Up/Down and navigate to Recovery and Press the Power Button.** You can also go into\\nrecovery by pressing **Volume Down** + **Power**. Please follow LineageOS docs for more information.\\n\\nNow Tap **Factory Reset**, then Format Data / Factory Reset and continue with the formatting process. This will remove encryption and delete all files stored in the internal storage, as well as format your cache partition \\n(if you have one). Return to the main menu.\\n\\n:::danger\\n\\nYou don\'t need to **Format Data** if you are already on a build from HAM and trying to update your ROM, this is \\nonly for a fresh install and should be done only if the ROM itself is different.\\n\\n:::\\n\\nSideload the LineageOS .zip package:\\n\\nOn the device, select **\u201cApply Update\u201d**, then **\u201cApply from ADB\u201d** to begin sideload.\\nOn the host machine, sideload the package using: **```adb sideload filename.zip.```**\\n\\nIn our case, the following command,\\n```bash\\nadb sideload lineage-19.1-*-release-enchilada-signed.zip\\n``` \\nThis is the file you downloaded from your releases.\\n\\nOnce you have installed everything successfully, click the back arrow in the top left of the screen, \\nthen **\u201cReboot system now\u201d**.\\n\\n## Check your Build Before Locking\\n\\nAfter the reboot, you should have a working LineageOS 19.1 build with Google Apps embedded into it, check for bootloops\\nand other errors, don\'t setup anything or login into your google account. Just checkout the OS for bugs and fatal\\nerrors.\\n\\nOnce checking is done,\\nEnable OEM unlocking and developer mode again, and reboot into fastboot again.\\n\\n## Flashing your Public Key and Lock Bootloader\\n\\nRun the following commands while you are in fastboot,\\n\\n```bash\\n fastboot flash avb_custom_key pkmd.bin\\n```\\n\\nThis **pkmd.bin** file is the file we extracted from the recovery zip we downloaded from our Github repo release which\\nis built by HAM.\\n\\n\\nNow we will lock the bootloader, this will wipe all data on your Phone, \\n\\n```bash\\n fastboot reboot bootloader\\n fastboot oem lock\\n```\\n\\n**Now you will be rebooted and hopefully with no errors, with a locked bootloader. Now Setup your Phone and recover\\nyour Backups from Google.**\\n\\n\\n## Conclusion\\n\\nIf you do end up with a bootloop after you lock your bootloader, please follow the unbrick guide for OnePlus 6 using\\nthe MSM Tool. This will not happen in most cases, at least from build outputs of HAM. But there is no warranty of\\nany sorts. \\n\\n\ud83c\udf89 You now have a Custom ROM running in your OP6 with **Locked Bootloader** \ud83c\udf89 \\n\\nSpecial thanks to [@WhitbyGreg](https://forum.xda-developers.com/m/whitbygreg.1915770/) who made the XDA forum post,\\nand [Wunderment OS](https://github.com/Wunderment) from where I copied a lot of scripts to make the ham recipe."},{"id":"welcome","metadata":{"permalink":"/ham/blog/welcome","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-12-14-welcome/index.md","source":"@site/blog/2022-12-14-welcome/index.md","title":"Welcome to HAM Blogs","description":"HAM(Hetzner Android Make) was a long time dream of a project for me to be honest, I\'m super lazy and","date":"2022-12-14T00:00:00.000Z","formattedDate":"December 14, 2022","tags":[{"label":"hello","permalink":"/ham/blog/tags/hello"},{"label":"welcome","permalink":"/ham/blog/tags/welcome"},{"label":"howdy","permalink":"/ham/blog/tags/howdy"}],"readingTime":0.89,"hasTruncateMarker":false,"authors":[{"name":"Divya Antony J.R","title":"Maintainer of HAM","url":"https://antonyjr.in","imageURL":"https://github.com/antony-jr.png","key":"antonyjr"}],"frontMatter":{"slug":"welcome","title":"Welcome to HAM Blogs","authors":["antonyjr"],"tags":["hello","welcome","howdy"]},"prevItem":{"title":"Relocking your Bootloader with LineageOS 19.1 with MindTheGapps on OnePlus 6","permalink":"/ham/blog/enchilada-los19-guide-relocking"}},"content":"HAM(Hetzner Android Make) was a long time dream of a project for me to be honest, I\'m super lazy and \\nimplement only a dozen of my ideas which annoys me a lot on a personal level. One of such project is\\nHAM and it feels good to finally release it out in the public.\\n\\nThanks for showing interest in this project, I hope it will grow in the future, even if it does not,\\nI really like this tool and will continue to support it in the future, at least for my use case.\\n\\nThis blog will be used to post custom device recipe or instructions for using HAM, I invite anyone \\nto write on this blog on how they used ham to build LineageOS or AOSP for their device. Maybe git urls\\nto use with ham to get that specific build. Anything related Android ROM building with HAM.\\n\\nThank you for your Time. If you like this project, please leave a Star at Github, This really helps to\\nincrease the trust on this project.\\n\\nYours,   \\nAntony J.R"}]}')}}]);